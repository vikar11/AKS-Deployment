apiVersion: apps/v1
kind: Deployment
metadata:
  name: azurelandingzone
  namespace: private
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: azurelandingzone
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: azurelandingzone
    spec:
      containers:
      - name: azurelandingzone
        image: containerregewus2.azurecr.io/containerregprivate:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: Dev_ENVIRONMENT
          value: master
        - name: ASPNETCORE_URLS
          value: "http://0.0.0.0:5000"
        - name: CLUSTER_REGION
          value: "East US2"
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: /mnt/secrets-store
          readOnly: true
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 120
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: secrets-store01-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-kvname-system-msi"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 5000
      terminationGracePeriodSeconds: 30


---

apiVersion: v1
kind: Service
metadata:
  name: azurelandingzone
  namespace: private
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: azurelandingzone
  # externalTrafficPolicy: Local

---

apiVersion: v1
kind: Service
metadata:
  name: internalloadbalancer
  namespace: private
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-load-balancer-ipv4: "10.50.0.9"  # Optional specific private IP
    service.beta.kubernetes.io/azure-pls-create: "true"
    service.beta.kubernetes.io/azure-pls-name: "azurelandingzone3-pls"
    service.beta.kubernetes.io/azure-pls-ip-configuration-subnet: "snet-alzspokerg-dev-eastus2-001"
    service.beta.kubernetes.io/azure-pls-ip-configuration-vnet: "vnet-alzspokerg-dev-eastus2-001"
    service.beta.kubernetes.io/azure-pls-ip-configuration-resource-group: "rg-alzspokerg-dev-eastus2-001"
    service.beta.kubernetes.io/azure-pls-ip-configuration-address-count: "1"
    service.beta.kubernetes.io/azure-pls-proxy-protocol: "false"
    service.beta.kubernetes.io/azure-pls-visibility: "*"
    #service.beta.kubernetes.io/azure-pls-auto-approval: "5ab24318-463b-45a8-806d-cc2d0cf9a3d0" # Replace if needed
spec:
  type: LoadBalancer
  selector:
    app: azurelandingzone
  ports:
    - name: http
      port: 80
      targetPort: 5000
